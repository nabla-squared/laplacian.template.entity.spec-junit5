{{#define "test_context_class"}}{{upper-camel project.name}}ModelTestContext{{/define}}
package {{entity.namespace}}.model

import {{project.namespace}}.{{test_context_class}}
import org.junit.jupiter.api.Assertions.*
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.assertAll

class {{upper-camel entity.class_name}}Test {

    {{#if entity.owner}}
    companion object {
        {{#each entity.ownership_hierarchy as |ownership|}}
        {{define "owner" ownership.entity}}
        {{#if owner.examples}}
        {{define "example" owner.examples.[0]}}
        val {{upper-underscore owner.identifier}}_EXAMPLE = """
        |{{plural owner.identifier}}:
        |- {{yaml example "        |  "}}
        """.trimMargin()
        {{/if}}
        {{/each}}
    }
    {{/if}}

    {{#each entity.examples as |example|}}
    {{define "example_index" @index}}
    {{#define "suffix"}}{{#if (not (eq @index 0))}} - alternative case {{@index}}{{/if}}{{/define}}
    @Test
    fun `each properties of a {{entity.name}} model returns the appropriate value{{suffix}}`() {
        val context = {{test_context_class}}().models(
        {{#each entity.ownership_hierarchy as |ownership|}}
        {{define "owner" ownership.entity}}
        {{#if owner.examples}}
        {{upper-underscore ownership.entity.identifier}}_EXAMPLE,
        {{/if}}
        {{/each}}
        """
        {{#if entity.top_level}}
        |{{plural entity.identifier}}:
        {{/if}}
        {{#each entity.ownership_hierarchy as |ownership|}}
        {{define "owner" ownership.entity}}
        {{#if @first}}
        |{{plural owner.identifier}}:
        {{/if}}
        {{#each owner.primary_keys as |pk|}}
        {{#define "header"}}{{#if @first}}- {{else}}  {{/if}}{{/define}}
        |{{pad}}{{header}}{{pk.property_name}}: {{pk.example_values.[0]}}
        {{/each}}
        |{{pad}}  {{ownership.property_name}}:
        {{#define "../../pad"}}{{pad}}  {{/define}}
        {{/each}}
        {{#define "shift"}}        |{{pad}}  {{/define}}
        |{{pad}}- {{yaml example shift}}
        """.trimMargin())
        val model = context
            {{#each entity.ownership_hierarchy as |ownership|}}
            {{define "owner" ownership.entity}}
            {{#define "finder"}}
            {{#each ownership.reference_entity.primary_keys as |pk|}}
                it.{{pk.property_name}} == {{literal pk.example_values.[0]}}{{#unless @last}} &&{{/unless}}
            {{/each}}
            {{/define}}
            {{#if @first}}
            .{{lower-camel (plural owner.identifier)}}.find {
            {{#each owner.primary_keys as |pk|}}
                it.{{pk.property_name}} == {{literal pk.example_values.[0]}}{{#unless @last}} &&{{/unless}}
            {{/each}}
            }!!
            {{/if}}
            .{{ownership.property_name}}.find {
                {{#if @last}}
                {{#each entity.primary_keys as |pk|}}
                it.{{pk.property_name}} == {{literal (lookup (lookup entity.examples example_index) pk.name)}}{{#unless @last}} &&{{/unless}}
                {{/each}}
                {{else}}
                {{finder}}
                {{/if}}
            }!!
            {{/each}}
            {{#if entity.top_level}}
            .{{lower-camel (plural entity.identifier)}}.find {
                {{#each entity.primary_keys as |pk|}}
                it.{{pk.property_name}} == {{literal (lookup (lookup entity.examples example_index) pk.name)}}{{#unless @last}} &&{{/unless}}
                {{/each}}
            }!!
            {{/if}}
            as {{entity.class_name}}

        assertAll(
            {{#trim chars=","}}
            {{#each entity.properties as |p|}}
            {{#if (contains-key p.example_values example_index)}}
            {{define "example" (lookup p.example_values example_index)}}
            { assertEquals({{literal example}}, model.{{p.property_name}}) },
            {{/if}}
            {{/each}}
            {{/trim}}
        )
    }
    {{/each}}
}
