{{#define "test_context_class"}}{{upper-camel project.name}}ModelTestContext{{/define}}
{{define "top_level_entity" (not entity.owner yes=entity no=entity.root_owner)}}
package {{entity.namespace}}.model

import {{project.namespace}}.{{test_context_class}}
import org.junit.jupiter.api.Assertions.*
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.assertAll

class {{upper-camel entity.class_name}}Test {

    companion object {
        {{#if entity.owner}}
        {{#each entity.ownership_hierarchy as |ownership|}}
        {{define "owner" ownership.entity}}
        {{#if owner.examples}}
        {{define "example" owner.examples.[0]}}
        val {{upper-underscore owner.identifier}}_EXAMPLE = """
        |{{plural owner.identifier}}:
        |- {{yaml example "        |  "}}
        """.trimMargin()
        {{/if}}
        {{/each}}
        {{/if}}
        val MODEL_YAML = """
        {{#if entity.top_level}}
        |{{plural entity.identifier}}:
        {{/if}}
        {{#each entity.ownership_hierarchy as |ownership|}}
        {{define "owner" ownership.entity}}
        {{#if @first}}
        |{{plural owner.identifier}}:
        {{/if}}
        {{#each owner.primary_keys as |pk|}}
        {{#define "header"}}{{#if @first}}- {{else}}  {{/if}}{{/define}}
        |{{pad}}{{header}}{{pk.property_name}}: {{pk.example_values.[0]}}
        {{/each}}
        |{{pad}}  {{ownership.property_name}}:
        {{#define "../../pad"}}{{pad}}  {{/define}}
        {{/each}}
        {{#each entity.examples as |example|}}
        |
        {{#define "shift"}}        |{{pad}}  {{/define}}
        |{{pad}}- {{yaml example shift}}
        {{/each}}
        """.trimMargin()
    }

    val {{plural top_level_entity.identifier}}: {{top_level_entity.class_name}}List
        get() = {{test_context_class}}().models(MODEL_YAML).{{plural top_level_entity.identifier}}


    {{#each entity.examples as |example|}}
    {{define "example_index" @index}}
    {{#define "suffix"}}{{#if (not (eq @index 0))}} - alternative case {{@index}}{{/if}}{{/define}}
    @Test
    fun `each properties of a {{entity.name}} model returns the appropriate value{{suffix}}`() {
        val model = {{plural top_level_entity.identifier}}.find {
            {{#each entity.ownership_hierarchy as |ownership|}}
            {{#if @first}}
            .{{lower-camel (plural owner.identifier)}}.find {
            {{#each owner.primary_keys as |pk|}}
                it.{{pk.property_name}} == {{literal pk.example_values.[0]}}{{#unless @last}} &&{{/unless}}
            {{/each}}
            }!!
            {{/if}}
            {{define "owner" ownership.entity}}
            {{#define "finder"}}
            {{#each ownership.reference_entity.primary_keys as |pk|}}
                it.{{pk.property_name}} == {{literal pk.example_values.[0]}}{{#unless @last}} &&{{/unless}}
            {{/each}}
            {{/define}}
            .{{ownership.property_name}}.find {
                {{#if @last}}
                {{#each entity.primary_keys as |pk|}}
                it.{{pk.property_name}} == {{literal (lookup (lookup entity.examples example_index) pk.name)}}{{#unless @last}} &&{{/unless}}
                {{/each}}
                {{else}}
                {{finder}}
                {{/if}}
            }!!
            {{/each}}
            {{#if entity.top_level}}
                {{#each entity.primary_keys as |pk|}}
                it.{{pk.property_name}} == {{literal (lookup (lookup entity.examples example_index) pk.name)}}{{#unless @last}} &&{{/unless}}
                {{/each}}
            }!!
            {{/if}}
            as {{entity.class_name}}

        assertAll(
            {{#trim chars=","}}
            {{#each entity.properties as |p|}}
            {{#if (contains-key p.example_values example_index)}}
            {{define "example" (lookup p.example_values example_index)}}
            { assertEquals({{literal example}}, model.{{p.property_name}}) },
            {{/if}}
            {{/each}}
            {{/trim}}
        )
    }
    {{/each}}

    {{#each entity.relationships as |relationship|}}
    {{#each relationship.examples as |example|}}
    @Test
    fun `{{#if example.title}}{{example.title}}{{else}}example of the relationship {{relationship.name}} {{@index_1}}{{/if}}`() {
        {{#if (eq (trim example.then_returns) "null")}}
        assertNull(
            {{shift example.when 12}}
        )
        {{else}}
        assertEquals(
            {{shift example.when 12}},
            {{shift example.then_returns 12}}
        )
        {{/if}}
    }
    {{/each}}
    {{/each}}
}
